{"version":3,"sources":["components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","components/helpers/dropdown/dropdown.js","components/helpers/dropdown/index.js","components/main/sorted/sorted.js","components/main/headoftodo/index.js","components/main/headoftodo/headoftodo.js","components/main/modalwindow/modalwindow.js","components/main/modalwindow/index.js","components/main/todolist/todoitem.js","components/main/todolist/todolist.js","components/main/main.js","components/app.js","index.js"],"names":["Header","className","Footer","Dropdown","props","items","dropdownInf","visibleToggle","textValue","handleClick","open","type","onClick","map","item","key","defaultProps","PropTypes","shape","bool","name","string","func","sortBy","searchText","priority","completed","sorted","sortObject","HeadOfTodo","state","openByDone","openByPriority","visibleChange","bind","searchByTitle","this","setState","prevState","e","handleSorted","value","target","innerText","handleShowModal","placeholder","onChange","style","height","Component","ModalWindow","title","description","id","handleSubmit","resetData","handleChange","handleCancel","prevProps","editItem","tagName","event","creatTodo","editTodo","preventDefault","resetItem","edit","show","onSubmit","required","undefined","TodoItem","dropdownOpen","handleOpen","todo","toggleDone","deleteTodo","done","TodoList","todolist","Main","showModalWindow","filterItems","sortedItems","Date","now","todoItem","newItem","filter","setTimeout","copyTodos","includes","sort","x","y","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4617178a.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-header font-weight-bold'>\n      ToDo List\n    </div>\n  )\n}","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-footer font-weight-bold'>\n      Aleksei Kotvitskyi\n    </div>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n\nfunction Dropdown(props) {\n  const { items, dropdownInf, visibleToggle, textValue, handleClick } = props;\n    return (\n      <div className={dropdownInf.open ? 'dropdownList open' : 'dropdownList'} >\n        <button\n         type='button' \n         onClick={() => visibleToggle(dropdownInf)}>\n         { textValue  }\n        </button>\n        <ul>\n          { items.map((item) => {\n            return (\n              <li key={item} onClick={handleClick}>{item}</li>\n            );\n          }) }\n        </ul>\n      </div>\n    )\n}\nDropdown.defaultProps = {\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  handleClick: PropTypes.func\n};\n\nDropdown.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  visibleToggle: PropTypes.func.isRequired,\n  textValue: PropTypes.string.isRequired,\n  handleClick: PropTypes.func\n};\n\nexport default Dropdown;","import Dropdown from './dropdown';\n\nexport default Dropdown;","const sortBy = {\n  searchText: '',\n  priority: 'all',\n  completed: 'all',\n};\n\nfunction sorted(sortObject) {\n  sortBy.completed = sortObject.completed;\n  sortBy.priority = sortObject.priority;\n  sortBy.searchText = sortObject.searchText;\n\n  return sortBy;\n}\n\nexport default sorted;\n","import HeadOfTodo from './headoftodo';\n\nexport default HeadOfTodo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DropDown from '../../helpers/dropdown';\nimport sorted from '../sorted/sorted';\n\nclass HeadOfTodo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openByDone: {\n        open: true,\n        name: 'openByDone',\n      },\n      openByPriority: {\n        open: true,\n        name: 'openByPriority',\n      },\n      priority: 'all',\n      completed: 'all',\n      searchText: '',\n    };\n    this.visibleChange = this.visibleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.searchByTitle = this.searchByTitle.bind(this);\n  }\n\n  visibleChange(item) {\n    this.setState(prevState => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open,\n      },\n    }));\n  }\n\n  handleClick(e, name) {\n    const { handleSorted } = this.props;\n    const value = e.target.innerText;\n    const sortBy = sorted({ [name]: value });\n    this.setState({\n      [name]: value,\n    });\n    handleSorted(sortBy);\n  }\n\n  searchByTitle(e) {\n    const { handleSorted } = this.props;\n    const { value } = e.target;\n    const sortBy = sorted({ searchText: value });\n    this.setState({\n      searchText: value,\n    });\n\n    handleSorted(sortBy);\n  }\n\n  render() {\n    const { openByDone, openByPriority, priority, completed } = this.state;\n    const { handleShowModal } = this.props;\n    const priorityItems = ['all', 'high', 'normal', 'low'];\n    const doneItems = ['all', 'open', 'done'];\n    return (\n      <div className=\"d-flex justify-content-around mt-3\">\n        <div>\n          <input\n            type=\"search\"\n            placeholder=\"search by title\"\n            className=\"form-control\"\n            onChange={this.searchByTitle}\n          />\n        </div>\n        <DropDown\n          items={doneItems}\n          dropdownInf={openByDone}\n          visibleToggle={this.visibleChange}\n          handleClick={e => this.handleClick(e, 'completed')}\n          textValue={completed}\n        />\n        <DropDown\n          items={priorityItems}\n          dropdownInf={openByPriority}\n          visibleToggle={this.visibleChange}\n          handleClick={e => this.handleClick(e, 'priority')}\n          textValue={priority}\n        />\n        <button\n          className=\"btn btn-dark col-2 p-0\"\n          style={{ height: '40px' }}\n          type=\"button\"\n          onClick={() => handleShowModal()}\n        >\n          Сreate\n        </button>\n      </div>\n    );\n  }\n}\n\nHeadOfTodo.propTypes = {\n  handleShowModal: PropTypes.func.isRequired,\n  handleSorted: PropTypes.func.isRequired,\n};\n\nexport default HeadOfTodo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../helpers/dropdown';\nimport './style.css';\n\nclass ModalWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openByPriority: {\n        name: 'openByPriority',\n        open: true,\n      },\n      title: '',\n      description: '',\n      priority: 'high',\n      id: null,\n    };\n\n    this.visibleToggle = this.visibleToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.resetData = this.resetData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { editItem } = this.props;\n    if (editItem) {\n      if (prevProps.editItem !== editItem) {\n        const { title, description, priority, id } = editItem;\n        this.setState({\n          title,\n          description,\n          priority,\n          id,\n        });\n      }\n    }\n  }\n\n  handleChange(e) {\n    const target = e.target.tagName;\n    const name = target === 'INPUT' ? 'title' : 'description';\n    const { value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    const { title, description, priority, id } = this.state;\n    const { creatTodo, editTodo, editItem } = this.props;\n    event.preventDefault();\n    if (!editItem) {\n      creatTodo({ title, description, priority });\n    } else {\n      editTodo({ title, description, priority, id });\n    }\n\n    this.resetData();\n  }\n\n  handleCancel() {\n    const { handleShowModal } = this.props;\n    handleShowModal();\n    this.resetData();\n  }\n\n  handleClick(e) {\n    this.setState({\n      priority: e.target.innerText,\n    });\n  }\n\n  resetData() {\n    const { resetItem } = this.props;\n    this.setState({\n      title: '',\n      description: '',\n      priority: 'high',\n      edit: false,\n      id: null,\n    });\n    resetItem();\n  }\n\n  visibleToggle(item) {\n    this.setState(prevState => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open,\n      },\n    }));\n  }\n\n  render() {\n    const { openByPriority, title, description, priority } = this.state;\n    const { show } = this.props;\n    const priorityItems = ['high', 'normal', 'low'];\n\n    return (\n      <div className={show ? 'modalWindow show' : 'modalWindow'}>\n        <form className=\"createTodoContent\" onSubmit={this.handleSubmit}>\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              title=\"please fill this field\"\n              className=\"form-control\"\n              value={title}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Description:\n            <div>\n              <textarea\n                placeholder=\"Description\"\n                className=\"form-control\"\n                value={description}\n                onChange={this.handleChange}\n              />\n            </div>\n          </label>\n          <p>Priority: </p>\n          <Dropdown\n            items={priorityItems}\n            dropdownInf={openByPriority}\n            visibleToggle={this.visibleToggle}\n            handleClick={this.handleClick}\n            textValue={priority}\n          />\n          <div className=\"btnGroup\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              onClick={this.handleCancel}\n            >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-outline-success\">\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nModalWindow.defaultProps = {\n  editItem: undefined,\n};\n\nModalWindow.propTypes = {\n  show: PropTypes.bool.isRequired,\n  editItem: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n  creatTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  handleShowModal: PropTypes.func.isRequired,\n  resetItem: PropTypes.func.isRequired,\n};\n\nexport default ModalWindow;\n","import ModalWindow from './modalwindow';\n\nexport default ModalWindow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOpen: false,\n    };\n\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  }\n\n  render() {\n    const { todo, editTodo, toggleDone, deleteTodo } = this.props;\n    const { dropdownOpen } = this.state;\n    return (\n      <div\n        className={`card text-white ${\n          todo.done ? 'bg-success' : 'bg-secondary'\n        }  mb-3 todoItem show`}\n      >\n        <div className=\"card-header\">{todo.title}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{todo.description}</p>\n        </div>\n        <div className=\"d-flex justify-content-around card-footer\">\n          <p>{todo.priority}</p>\n\n          <div\n            className={\n              dropdownOpen ? 'dropdownEditTodo open' : 'dropdownEditTodo'\n            }\n          >\n            <button type=\"button\" onClick={this.handleOpen}>\n              ...\n            </button>\n            <ul>\n              <li\n                onClick={() => {\n                  toggleDone(todo);\n                  this.handleOpen();\n                }}\n              >\n                done\n              </li>\n              <li\n                onClick={() => {\n                  editTodo(todo);\n                  this.handleOpen();\n                }}\n              >\n                edit\n              </li>\n              <li\n                onClick={() => {\n                  deleteTodo(todo);\n                }}\n              >\n                delete\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    done: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n  }).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoitem';\nimport './style.css';\n\nfunction TodoList(props) {\n  const { todolist, editTodo, toggleDone, deleteTodo } = props;\n  return (\n    <ul className=\"todoList\">\n      {todolist.map(todo => {\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            editTodo={editTodo}\n            toggleDone={toggleDone}\n            deleteTodo={deleteTodo}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todolist: PropTypes.arrayOf(\n    PropTypes.shape({\n      done: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport HeadOfTodo from './headoftodo';\nimport ModalWindow from './modalwindow';\nimport TodoList from './todolist/todolist';\n\nlet sortBy = {\n  searchText: '',\n  priority: 'all',\n  completed: 'all',\n};\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModalWindow: false,\n      items: [],\n      filterItems: [],\n      editItem: undefined,\n    };\n\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.creatTodo = this.creatTodo.bind(this);\n    this.editTodo = this.editTodo.bind(this);\n    this.toggleDone = this.toggleDone.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.sortedItems = this.sortedItems.bind(this);\n    this.resetItem = this.resetItem.bind(this);\n  }\n\n  handleShowModal() {\n    this.setState(prevState => ({\n      showModalWindow: !prevState.showModalWindow,\n    }));\n  }\n\n  creatTodo(todo) {\n    this.setState(prevState => {\n      return {\n        items: [\n          ...prevState.items,\n          {\n            id: Date.now(),\n            done: false,\n            ...todo,\n          },\n        ],\n      };\n    });\n\n    this.sortedItems(sortBy);\n    this.handleShowModal();\n  }\n\n  editTodo(todo) {\n    const { id, title, description, priority } = todo;\n    this.setState(prevState => {\n      return {\n        editItem: todo,\n        items: prevState.items.map(todoItem => {\n          const newItem = { ...todoItem };\n          if (todoItem.id === id) {\n            newItem.title = title;\n            newItem.description = description;\n            newItem.priority = priority;\n          }\n          return newItem;\n        }),\n      };\n    });\n\n    this.sortedItems(sortBy);\n    this.handleShowModal();\n  }\n\n  toggleDone(todo) {\n    this.setState(prevState => ({\n      items: prevState.items.map(todoItem => {\n        const newItem = { ...todoItem };\n        if (todoItem.id === todo.id) {\n          newItem.done = !todo.done;\n        }\n        return newItem;\n      }),\n    }));\n\n    this.sortedItems(sortBy);\n  }\n\n  deleteTodo(todo) {\n    const { items } = this.state;\n    this.setState({\n      items: items.filter(todoItem => todoItem.id !== todo.id),\n    });\n\n    this.sortedItems(sortBy);\n  }\n\n  sortedItems(filter) {\n    setTimeout(() => {\n      const { items } = this.state;\n      let copyTodos = [...items];\n      sortBy = { ...filter };\n\n      switch (filter.completed) {\n        case 'done': {\n          copyTodos = copyTodos.filter(todoItem => todoItem.done);\n          break;\n        }\n        case 'open': {\n          copyTodos = copyTodos.filter(todoItem => !todoItem.done);\n          break;\n        }\n        default:\n          break;\n      }\n\n      switch (filter.priority) {\n        case 'high': {\n          copyTodos = copyTodos.filter(\n            todoItem => todoItem.priority === 'high',\n          );\n          break;\n        }\n        case 'normal': {\n          copyTodos = copyTodos.filter(\n            todoItem => todoItem.priority === 'normal',\n          );\n          break;\n        }\n        case 'low': {\n          copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'low');\n          break;\n        }\n        default:\n          break;\n      }\n      if (filter.searchText) {\n        copyTodos = copyTodos.filter(todoItem =>\n          todoItem.title.includes(filter.searchText),\n        );\n      }\n\n      copyTodos.sort((x, y) => x.done - y.done);\n      this.setState({ filterItems: copyTodos });\n    });\n  }\n\n  resetItem() {\n    this.setState({ editItem: undefined });\n  }\n\n  render() {\n    const { showModalWindow, filterItems, editItem } = this.state;\n\n    return (\n      <>\n        <HeadOfTodo\n          handleShowModal={this.handleShowModal}\n          handleSorted={this.sortedItems}\n        />\n        <ModalWindow\n          show={showModalWindow}\n          handleShowModal={this.handleShowModal}\n          creatTodo={this.creatTodo}\n          editTodo={this.editTodo}\n          editItem={editItem}\n          resetItem={this.resetItem}\n        />\n        <TodoList\n          todolist={filterItems}\n          editTodo={this.editTodo}\n          toggleDone={this.toggleDone}\n          deleteTodo={this.deleteTodo}\n        />\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\nimport Header from './header';\nimport Footer from './footer';\nimport Main from './main/main';\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}