{"version":3,"sources":["components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","components/helpers/dropdown/dropdown.js","components/helpers/dropdown/index.js","components/main/headoftodo/index.js","components/main/headoftodo/headoftodo.js","components/main/modalwindow/modalwindow.js","components/main/modalwindow/index.js","components/main/todolist/todoitem.js","components/main/todolist/todolist.js","components/main/main.js","components/app.js","index.js"],"names":["Header","className","Footer","Dropdown","props","items","dropdownInf","visibleToggle","textValue","handleClick","open","type","onClick","map","item","key","defaultProps","PropTypes","shape","bool","name","string","func","HeadOfTodo","state","openByDone","openByPriority","priority","show","visibleChange","bind","handleClickPriority","handleClickShow","this","setState","prevState","e","target","innerText","handleShowModal","placeholder","style","height","Component","ModalWindow","title","description","handleSubmit","resetData","handleChange","handleCancel","event","creatTodo","preventDefault","tagName","value","onSubmit","onChange","required","TodoItem","dropdownOpen","handleOpen","todo","done","TodoList","todolist","id","Main","showModalWindow","Date","now","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7c3bc91.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-header font-weight-bold'>\n      ToDo List\n    </div>\n  )\n}","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-footer font-weight-bold'>\n      Aleksei Kotvitskyi\n    </div>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n\nfunction Dropdown(props) {\n  const { items, dropdownInf, visibleToggle, textValue, handleClick } = props;\n    return (\n      <div className={dropdownInf.open ? 'dropdownList open' : 'dropdownList'} >\n        <button\n         type='button' \n         onClick={() => visibleToggle(dropdownInf)}>\n         { textValue  }\n        </button>\n        <ul>\n          { items.map((item) => {\n            return (\n              <li key={item} onClick={handleClick}>{item}</li>\n            );\n          }) }\n        </ul>\n      </div>\n    )\n}\nDropdown.defaultProps = {\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  handleClick: PropTypes.func\n};\n\nDropdown.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  visibleToggle: PropTypes.func.isRequired,\n  textValue: PropTypes.string.isRequired,\n  handleClick: PropTypes.func\n};\n\nexport default Dropdown;","import Dropdown from './dropdown';\n\nexport default Dropdown;","import HeadOfTodo from './headoftodo';\n\nexport default HeadOfTodo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DropDown from '../../helpers/dropdown';\n\nclass HeadOfTodo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openByDone: {\n        open: true,\n        name: 'openByDone'\n      },\n      openByPriority: {\n        open: true,\n        name: 'openByPriority'\n      },\n      priority: 'all',\n      show: 'all'\n    }\n    this.visibleChange = this.visibleChange.bind(this);\n    this.handleClickPriority = this.handleClickPriority.bind(this);\n    this.handleClickShow = this.handleClickShow.bind(this);\n  }\n\n  visibleChange(item) {\n    this.setState((prevState) => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open\n      }\n    }))\n  }\n\n  handleClickPriority(e) {\n    this.setState({\n      priority: e.target.innerText\n    });\n  }\n\n  handleClickShow(e) {\n    this.setState({\n      show: e.target.innerText\n    });\n  }\n\n  render() {\n    const { openByDone, openByPriority, priority, show } = this.state;\n    const { handleShowModal } = this.props;\n    const priorityItems = ['all', 'hight', 'normal', 'low'];\n    const doneItems = ['all','open','done'];\n    return (\n      <div className='d-flex justify-content-around mt-3'>\n        <div>\n          <input \n            type=\"search\"\n            placeholder=\"search by title\"\n            className=\"form-control\" />\n        </div>\n        <DropDown \n          items={doneItems}\n          dropdownInf={openByDone}\n          visibleToggle={this.visibleChange}\n          handleClick={this.handleClickShow}\n          textValue={show} />\n        <DropDown \n          items={priorityItems} \n          dropdownInf={openByPriority} \n          visibleToggle={this.visibleChange}\n          handleClick={this.handleClickPriority}\n          textValue={priority} />\n        <button\n          className=\"btn btn-dark col-2 p-0\"\n          style={{height: '40px'}}\n          type='button'\n          onClick={() => handleShowModal()}\n        > \n          Ð¡reate \n        </button>\n      </div>\n    )\n  }\n}\n\nHeadOfTodo.propTypes = {\n  handleShowModal: PropTypes.func.isRequired\n}\n\nexport default HeadOfTodo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../helpers/dropdown';\nimport './style.css';\n\nclass ModalWindow extends Component {\n  constructor(){\n    super();\n    this.state = {\n      openByPriority: {\n        name: 'openByPriority',\n        open: true\n      },\n      title: '',\n      description: '',\n      priority: 'high'\n    }\n\n    this.visibleToggle = this.visibleToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.resetData = this.resetData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  visibleToggle(item) {\n    this.setState((prevState) => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open\n      }\n    }));\n  }\n\n  handleCancel() {\n    const { handleShowModal } = this.props;\n\n    handleShowModal()\n    this.resetData();\n  }\n\n  handleClick(e) {\n    this.setState({\n      priority: e.target.innerText\n    });\n  }\n\n  handleSubmit(event) {\n    const { handleShowModal, creatTodo } = this.props;\n    const { title, description, priority } = this.state;\n    event.preventDefault();\n    creatTodo({ title, description, priority });\n    \n    this.resetData();\n    handleShowModal();\n  }\n\n  resetData() {\n    this.setState({\n      title: '',\n      description: '',\n      priority: 'high'\n    })\n  }\n\n  handleChange(e) {\n    const target = e.target.tagName;\n    const name = target === \"INPUT\" ? 'title' : 'description';\n    const {value} = e.target;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    const { openByPriority, title, description, priority } = this.state;\n    const { show } = this.props;\n    const priorityItems = ['high', 'normal', 'low'];\n    return (\n      <div className={show ? \"modalWindow show\" : \"modalWindow\"}>\n        <form className=\"createTodoContent\" onSubmit={this.handleSubmit}>\n        <label >\n          Title:\n            <input \n              type=\"text\" \n              placeholder=\"Title\" \n              title=\"please fill this field\"\n              className=\"form-control\"\n              value={title}\n              onChange={this.handleChange}\n              required />\n        </label>\n          <label >\n            Description:\n            <div>\n              <textarea \n                placeholder=\"Description\"\n                className=\"form-control\"\n                value={description}\n                onChange={this.handleChange} />\n            </div>\n          </label>\n          <p>Priority: </p>\n          <Dropdown \n            items={priorityItems}\n            dropdownInf={openByPriority} \n            visibleToggle={this.visibleToggle}\n            handleClick={this.handleClick}\n            textValue={priority}\n          />\n          <div className=\"btnGroup\">\n              <button \n                type='button'\n                className=\"btn btn-outline-danger\"\n                onClick={this.handleCancel}>\n                  Cancel\n              </button>\n              <button type=\"submit\" className=\"btn btn-outline-success\">Save</button>\n          </div>\n        </form>\n      </div>\n      );\n  }\n}\n\nModalWindow.defaultProps = {\n  creatTodo: PropTypes.func\n}\n\nModalWindow.propTypes = {\n  handleShowModal: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  creatTodo: PropTypes.func\n}\n\nexport default ModalWindow;","import ModalWindow from './modalwindow';\n\nexport default ModalWindow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOpen: false\n    }\n\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState((prevState) => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    const { todo } = this.props;\n    const { dropdownOpen } = this.state;\n    return (\n      <div className={`card text-white ${todo.done ? 'bg-success' : 'bg-secondary'}  mb-3 todoItem show`}\n       >\n        <div className=\"card-header\">{todo.title}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            {todo.description}\n          </p>\n        </div>\n        <div className=\"d-flex justify-content-around card-footer\">\n          <p >\n            { todo.priority }\n          </p>\n\n          <div className={dropdownOpen ? \"dropdownEditTodo open\" : \"dropdownEditTodo\"}>\n            <button type=\"button\" onClick={this.handleOpen}>...</button>\n            <ul>\n              <li>done</li>\n              <li>edit</li>\n              <li>delete</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    done: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default TodoItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoitem';\nimport './style.css';\n\nfunction TodoList (props) {\n  const { todolist } = props;\n  return (\n    <ul className='todoList'>\n      {\n        todolist.map((todo) => {\n          return (\n            <TodoItem key={todo.id} todo={todo}/>\n          );\n        })\n      }\n    </ul>\n  )\n}\n\nTodoList.propTypes = {\n  todolist: PropTypes.arrayOf(\n    PropTypes.shape({\n      done: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired\n  })).isRequired\n};\n\nexport default TodoList;","import React, { Component } from 'react';\nimport HeadOfTodo from './headoftodo';\nimport ModalWindow from './modalwindow';\nimport TodoList from './todolist/todolist';\n\nclass Main extends Component{\n  constructor(){\n    super();\n    this.state = {\n      showModalWindow: false,\n      items: []\n    }\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.creatTodo = this.creatTodo.bind(this);\n  }\n\n  handleShowModal() {\n    this.setState((prevState) => ({\n      showModalWindow: !prevState.showModalWindow\n    }))\n  }\n\n  creatTodo(todo) {\n    this.setState((prevState) => ({\n      items: [\n        ...prevState.items,\n        {\n          id: Date.now(),\n          done: false,\n          ...todo\n        },\n      ]\n    }))\n  }\n\n  render() {\n    const { showModalWindow, items } = this.state;\n    return (\n      <>\n        <HeadOfTodo \n          handleShowModal={this.handleShowModal}/>\n        <ModalWindow \n          show={showModalWindow}\n          handleShowModal={this.handleShowModal}\n          creatTodo={this.creatTodo} />\n        <TodoList todolist={items} />\n      </>\n    );\n  }\n}\n\nexport default Main;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\nimport Header from './header';\nimport Footer from './footer';\nimport Main from './main/main';\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}