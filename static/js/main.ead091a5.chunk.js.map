{"version":3,"sources":["components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","components/helpers/dropdown/dropdown.js","components/helpers/dropdown/index.js","components/main/headoftodo/index.js","components/main/headoftodo/headoftodo.js","components/main/modalwindow/index.js","components/main/modalwindow/modalwindow.js","components/main/todolist/todoitem.js","components/main/todolist/todolist.js","components/main/main.js","components/app.js","index.js"],"names":["Header","className","Footer","Dropdown","props","items","dropdownInf","visibleToggle","textValue","handleClick","open","type","onClick","map","item","key","defaultProps","PropTypes","shape","bool","name","string","func","HeadOfTodo","state","openByDone","openByPriority","priority","show","visibleChange","bind","handleClickPriority","handleClickShow","this","setState","prevState","e","target","innerText","handleShowModal","placeholder","style","height","Component","ModalWindow","title","description","handleChange","handleCancel","handleSubmit","onSubmit","value","onChange","required","TodoItem","dropdownOpen","handleOpen","todo","editTodo","toggleDone","deleteTodo","done","TodoList","todolist","id","Main","showModalWindow","edit","creatTodo","resetData","Date","now","todoItem","newItem","filter","event","preventDefault","tagName","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ead091a5.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-header font-weight-bold'>\n      ToDo List\n    </div>\n  )\n}","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-footer font-weight-bold'>\n      Aleksei Kotvitskyi\n    </div>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n\nfunction Dropdown(props) {\n  const { items, dropdownInf, visibleToggle, textValue, handleClick } = props;\n    return (\n      <div className={dropdownInf.open ? 'dropdownList open' : 'dropdownList'} >\n        <button\n         type='button' \n         onClick={() => visibleToggle(dropdownInf)}>\n         { textValue  }\n        </button>\n        <ul>\n          { items.map((item) => {\n            return (\n              <li key={item} onClick={handleClick}>{item}</li>\n            );\n          }) }\n        </ul>\n      </div>\n    )\n}\nDropdown.defaultProps = {\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  handleClick: PropTypes.func\n};\n\nDropdown.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  visibleToggle: PropTypes.func.isRequired,\n  textValue: PropTypes.string.isRequired,\n  handleClick: PropTypes.func\n};\n\nexport default Dropdown;","import Dropdown from './dropdown';\n\nexport default Dropdown;","import HeadOfTodo from './headoftodo';\n\nexport default HeadOfTodo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DropDown from '../../helpers/dropdown';\n\nclass HeadOfTodo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openByDone: {\n        open: true,\n        name: 'openByDone'\n      },\n      openByPriority: {\n        open: true,\n        name: 'openByPriority'\n      },\n      priority: 'all',\n      show: 'all'\n    }\n    this.visibleChange = this.visibleChange.bind(this);\n    this.handleClickPriority = this.handleClickPriority.bind(this);\n    this.handleClickShow = this.handleClickShow.bind(this);\n  }\n\n  visibleChange(item) {\n    this.setState((prevState) => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open\n      }\n    }))\n  }\n\n  handleClickPriority(e) {\n    this.setState({\n      priority: e.target.innerText\n    });\n  }\n\n  handleClickShow(e) {\n    this.setState({\n      show: e.target.innerText\n    });\n  }\n\n  render() {\n    const { openByDone, openByPriority, priority, show } = this.state;\n    const { handleShowModal } = this.props;\n    const priorityItems = ['all', 'hight', 'normal', 'low'];\n    const doneItems = ['all','open','done'];\n    return (\n      <div className='d-flex justify-content-around mt-3'>\n        <div>\n          <input \n            type=\"search\"\n            placeholder=\"search by title\"\n            className=\"form-control\" />\n        </div>\n        <DropDown \n          items={doneItems}\n          dropdownInf={openByDone}\n          visibleToggle={this.visibleChange}\n          handleClick={this.handleClickShow}\n          textValue={show} />\n        <DropDown \n          items={priorityItems} \n          dropdownInf={openByPriority} \n          visibleToggle={this.visibleChange}\n          handleClick={this.handleClickPriority}\n          textValue={priority} />\n        <button\n          className=\"btn btn-dark col-2 p-0\"\n          style={{height: '40px'}}\n          type='button'\n          onClick={() => handleShowModal()}\n        > \n          Сreate \n        </button>\n      </div>\n    )\n  }\n}\n\nHeadOfTodo.propTypes = {\n  handleShowModal: PropTypes.func.isRequired\n}\n\nexport default HeadOfTodo;","import ModalWindow from './modalwindow';\n\nexport default ModalWindow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../helpers/dropdown';\nimport './style.css';\n\nclass ModalWindow extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      openByPriority: {\n        name: 'openByPriority',\n        open: true\n      },\n    }\n\n    this.visibleToggle = this.visibleToggle.bind(this);\n  }\n\n  visibleToggle(item) {\n    this.setState((prevState) => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open\n      }\n    }));\n  }\n\n\n  render() {\n    const { openByPriority } = this.state;\n    const { \n      show, \n      title, \n      description, \n      priority,\n      handleChange,\n      handleClick,\n      handleCancel,\n      handleSubmit\n    } = this.props;\n    const priorityItems = ['high', 'normal', 'low'];\n    return (\n      <div className={show ? \"modalWindow show\" : \"modalWindow\"}>\n        <form \n          className=\"createTodoContent\" \n          onSubmit={handleSubmit}>\n          <label >\n            Title:\n              <input \n                type=\"text\" \n                placeholder=\"Title\" \n                title=\"please fill this field\"\n                className=\"form-control\"\n                value={title}\n                onChange={handleChange}\n                required />\n          </label>\n          <label >\n            Description:\n            <div>\n              <textarea \n                placeholder=\"Description\"\n                className=\"form-control\"\n                value={description}\n                onChange={handleChange} />\n            </div>\n          </label>\n          <p>Priority: </p>\n          <Dropdown \n            items={priorityItems}\n            dropdownInf={openByPriority} \n            visibleToggle={this.visibleToggle}\n            handleClick={handleClick}\n            textValue={priority}\n          />\n          <div className=\"btnGroup\">\n              <button \n                type='button'\n                className=\"btn btn-outline-danger\"\n                onClick={handleCancel}>\n                  Cancel\n              </button>\n              <button type=\"submit\" className=\"btn btn-outline-success\">Save</button>\n          </div>\n        </form>\n      </div>\n      );\n  }\n}\n\n\nModalWindow.propTypes = {\n  show: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nexport default ModalWindow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOpen: false\n    }\n\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState((prevState) => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }))\n  }\n\n  render() {\n    const { todo, editTodo, toggleDone, deleteTodo } = this.props;\n    const { dropdownOpen } = this.state;\n    return (\n      <div className={`card text-white ${todo.done ? 'bg-success' : 'bg-secondary'}  mb-3 todoItem show`}\n       >\n        <div className=\"card-header\">{todo.title}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            {todo.description}\n          </p>\n        </div>\n        <div className=\"d-flex justify-content-around card-footer\">\n          <p >\n            { todo.priority }\n          </p>\n\n          <div className={dropdownOpen ? \"dropdownEditTodo open\" : \"dropdownEditTodo\"}>\n            <button type=\"button\" onClick={this.handleOpen}>...</button>\n            <ul>\n              <li onClick={() => {\n                toggleDone(todo);\n                this.handleOpen();\n              }}>\n                done\n              </li>\n              <li onClick={() => { \n                    editTodo(todo);\n                    this.handleOpen();\n                }}>\n                  edit\n              </li>\n              <li onClick={() => {\n                deleteTodo(todo);\n              }}>\n                delete\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    done: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired\n  }).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};\n\nexport default TodoItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoitem';\nimport './style.css';\n\nfunction TodoList (props) {\n  const { todolist, editTodo, toggleDone, deleteTodo } = props;\n  return (\n    <ul className='todoList'>\n      {\n        todolist.map((todo) => {\n          return (\n            <TodoItem \n              key={todo.id} \n              todo={todo}\n              editTodo={editTodo}\n              toggleDone={toggleDone}\n              deleteTodo={deleteTodo} />\n          );\n        })\n      }\n    </ul>\n  )\n}\n\nTodoList.propTypes = {\n  todolist: PropTypes.arrayOf(\n    PropTypes.shape({\n      done: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired\n  })).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};\n\nexport default TodoList;","import React, { Component } from 'react';\nimport HeadOfTodo from './headoftodo';\nimport ModalWindow from './modalwindow';\nimport TodoList from './todolist/todolist';\n\nclass Main extends Component{\n  constructor(){\n    super();\n    this.state = {\n      showModalWindow: false,\n      items: [],\n      title: '',\n      description: '',\n      priority: 'high',\n      edit: false,\n      id: null\n    }\n\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.creatTodo = this.creatTodo.bind(this);\n    this.editTodo = this.editTodo.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.resetData = this.resetData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.toggleDone = this.toggleDone.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n  }\n\n\n  handleShowModal() {\n    this.setState((prevState) => ({\n      showModalWindow: !prevState.showModalWindow\n    }));\n  }\n\n  creatTodo(todo) {\n    this.setState((prevState) => ({\n      items: [\n        ...prevState.items,\n        {\n          id: Date.now(),\n          done: false,\n          ...todo\n        },\n      ]\n    }));\n    this.handleShowModal();\n  }\n  \n  editTodo(todo){\n    const { \n      items,\n      title, \n      description, \n      priority\n    } = this.state;\n\n    this.setState({\n      title: todo.title,\n      description: todo.description,\n      priority: todo.priority,\n      id: todo.id,\n      edit: true,\n      items: items.map((todoItem) => {\n        const newItem = { ...todoItem };\n        if(todoItem.id === todo.id) {\n          newItem.title = title || todo.title;\n          newItem.description = description || todo.description;\n          newItem.priority = priority || todo.priority;\n        }\n        return newItem;\n      })\n    });\n    \n    this.handleShowModal();\n  }\n\n  toggleDone(todo) {\n    this.setState((prevState) => ({\n      items: prevState.items.map((todoItem) => {\n        const newItem = { ...todoItem };\n        if(todoItem.id === todo.id){\n          newItem.done = !todo.done\n        }\n        return newItem;\n      })\n    }))\n  }\n\n  deleteTodo(todo) {\n    const { items } = this.state;\n    this.setState({\n      items: items.filter((todoItem) => todoItem.id !== todo.id)\n    })\n  }\n\n  handleCancel() {\n    this.handleShowModal()\n    this.resetData();\n  }\n\n  handleClick(e) {\n    this.setState({\n      priority: e.target.innerText\n    });\n  }\n\n  handleSubmit(event) {\n    const { edit, title, description, priority, id } = this.state;\n    event.preventDefault();\n    if(!edit) {\n      this.creatTodo({title, description, priority});\n    } else {\n      this.editTodo({ title, description, priority, id });\n    }\n\n    this.resetData();\n  }\n\n  resetData() {\n    this.setState({\n      title: '',\n      description: '',\n      priority: 'high', \n      edit: false,\n      id: null\n    })\n  }\n\n  handleChange(e) {\n    const target = e.target.tagName;\n    const name = target === \"INPUT\" ? 'title' : 'description';\n    const {value} = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    const { showModalWindow, items, title, description, priority } = this.state;\n    return (\n      <>\n        <HeadOfTodo \n          handleShowModal={this.handleShowModal} />\n        <ModalWindow \n          show={showModalWindow}\n          handleShowModal={this.handleShowModal}\n          creatTodo={this.creatTodo} \n          title={title}\n          description={description}\n          priority={priority}\n          handleChange={this.handleChange}\n          handleClick={this.handleClick}\n          handleCancel={this.handleCancel}\n          handleSubmit={this.handleSubmit} \n        />\n        <TodoList \n          todolist={items}\n          editTodo={this.editTodo}\n          toggleDone={this.toggleDone}\n          deleteTodo={this.deleteTodo} />\n      </>\n    );\n  }\n}\n\nexport default Main;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\nimport Header from './header';\nimport Footer from './footer';\nimport Main from './main/main';\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}